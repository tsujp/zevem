const std = @import("std");
const print = std.debug.print;
const EnumField = std.builtin.Type.EnumField;

const EVM = @import("evm.zig").EVM;

pub fn main() !void {
    var evm = try EVM.init();

    // const foo = @as(u256, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) +% @as(u256, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);

    // print("i got {X}\n", .{foo});

    // XXX: Garbage for now, will delete shortly.
    // TODO: Tests with real (for now) simple bytecode (non-context).
    // try evm.execute(&.{ 0x01, 0x02, 0x00 });
    try evm.execute(&.{ 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00 });

    var evm2 = try EVM.init();
    try evm2.execute(&. { 0x5F, 0x60, 0x11, 0x61, 0x22, 0x33, 0x00 });
}
